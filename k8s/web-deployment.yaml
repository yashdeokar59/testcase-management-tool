apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-deployment
  namespace: test-management
  labels:
    app: test-management-tool
    component: web
spec:
  replicas: 0
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: test-management-tool
      component: web
  template:
    metadata:
      labels:
        app: test-management-tool
        component: web
    spec:
      initContainers:
      - name: wait-for-mysql
        image: busybox:1.35
        command: ['sh', '-c']
        args:
        - |
          echo "Waiting for MySQL to be ready..."
          until nc -z mysql-service 3306; do
            echo "MySQL not ready, waiting..."
            sleep 2
          done
          echo "MySQL is ready!"
      containers:
      - name: web
        image: yashdeokar59/testcase-managment-tool-web:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5000
          name: http
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: test-management-secrets
              key: database-url
        envFrom:
        - configMapRef:
            name: test-management-config
        volumeMounts:
        - name: uploads-storage
          mountPath: /app/uploads
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /login
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /login
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
      volumes:
      - name: uploads-storage
        persistentVolumeClaim:
          claimName: uploads-pvc
